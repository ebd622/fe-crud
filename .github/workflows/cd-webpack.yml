name: (CD) NodeJS with Webpack 

on:
  push:
    branches: [ "main" ]

jobs:

  check_status:
    runs-on: ubuntu-latest
    outputs:
      status_result: ${{ steps.git-status.outputs.status_result }}


    steps:
    - uses: actions/checkout@v4

    - name: Configure Git
      run: |
        git config --global user.email "eburdo@gmail.com"
        git config --global user.name "Eugeny"

    - name: Clone winkel-app-api repo
      run: |
        echo "Current path:" 
        pwd
        git clone https://${{ secrets.WEB_APP_API_TOKEN }}@api.glitch.com/git/winkel-app-api
        cd winkel-app-api
        echo 'List a folder:'
        ls -l

    - name: Check Glitch-git status
      id: git-status
      run: |
        cd winkel-app-api
        touch readme.tmp
        ls -l
        pwd
        echo 'Run git-status:'
        git status --porcelain
        {
          echo 'status_result<<EOF'
          git status --porcelain
          echo EOF
        } >> $GITHUB_OUTPUT

        #echo "::set-output name=result::B"
        #echo "result=" >> $GITHUB_OUTPUT

    - name: Deploy to Glitch
      if: steps.git-status.outputs.status_result != ''
      run: |
        echo "There are uncommitted changes. Running Deploy to glitch"
        
    - name: Nothing to deploy
      if: steps.git-status.outputs.status_result == ''
      run: |
        echo "No changes, there is nothing to deploy"      
  
  
  deploy:
    needs: check_status
    runs-on: ubuntu-latest
    if: needs.check_status.outputs.status_result != ''
    steps:
      - name: Run Job A tasks
        run: echo "Running Job A"

  skip:
    needs: check_status
    runs-on: ubuntu-latest
    if: needs.check_status.outputs.status_result == ''
    steps:
      - name: Run Job B tasks
        run: echo "Running Job B"
        


